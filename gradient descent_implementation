import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn import linear_model

df = pd.read_csv("test_scores.csv")
df

df.info()

def gradient_decent(x , y):
    m_curr=b_curr=0
    itr=1000000

    n=len(x)
    learning=0.0002

    for i in range(itr):
        y_predicted=m_curr*x+b_curr
        cost=(1/n)*sum((y-y_predicted)**2)
        print(f"m:{m_curr} b:{b_curr} cost:{cost} itr:{i}")
        # print(y_predicted)
        m_grad=(-1)*(2/n)*sum(x*(y-y_predicted))
        b_grad=(-1)*(2/n)*sum(y-y_predicted)

        m_curr=m_curr-learning*m_grad
        b_curr=b_curr-learning*b_grad

gradient_decent(df.math , df.cs)

y=1.01774299600447*df.math+1.9147403787832264

%matplotlib inline
plt.scatter(df.math , df.cs ,color='red' , marker='+')
plt.plot(df.math , y , color='blue')

reg=linear_model.LinearRegression()
reg.fit(df[['math']] , df.cs)

reg.coef_
reg.intercept_
reg.score(df[['math']] , df.cs)
